
<!-- saved from url=(0044)https://hub.docker.com/r/jupyter/jupyterhub/ -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><title>jupyter/jupyterhub - Docker Hub</title><meta name="viewport" content="width=device-width, initial-scale=1"><link rel="stylesheet" href="./jupyter_jupyterhub - Docker Hub_files/main.css"><link rel="stylesheet" href="./jupyter_jupyterhub - Docker Hub_files/font-awesome.min.css"><link rel="stylesheet" href="./jupyter_jupyterhub - Docker Hub_files/main-0-6764bc230a228e4c9549.css"><a href="https://hub.docker.com/r/jupyter/jupyterhub/?_pxhc=1510882720086" rel="nofollow" target="_blank" style="width: 0px; height: 0px; font-size: 0px; line-height: 0;">click</a></head><body><div id="app"><main class="Application__main___hmFcL" data-reactid=".di0668qc5c" data-react-checksum="1226315729"><div class="contain-to-grid" data-reactid=".di0668qc5c.1"><nav class="top-bar" data-topbar="true" role="navigation" data-reactid=".di0668qc5c.1.0"><section class="top-bar-section" data-reactid=".di0668qc5c.1.0.0"><ul class="title-area" data-reactid=".di0668qc5c.1.0.0.0"><li data-reactid=".di0668qc5c.1.0.0.0.0"><a class="" href="https://hub.docker.com/" data-reactid=".di0668qc5c.1.0.0.0.0.0"><img src="./jupyter_jupyterhub - Docker Hub_files/mini-logo.svg" alt="docker logo" class="Nav__logo___2NwhF" data-reactid=".di0668qc5c.1.0.0.0.0.0.0"></a></li></ul><ul class="leftNav" data-reactid=".di0668qc5c.1.0.0.1"><li data-reactid=".di0668qc5c.1.0.0.1.0"><div class="row" data-reactid=".di0668qc5c.1.0.0.1.0.0"><form class="large-12 columns" data-reactid=".di0668qc5c.1.0.0.1.0.0.0"><div class="searchbar" data-reactid=".di0668qc5c.1.0.0.1.0.0.0.0"><input type="text" placeholder="Search" class="SearchBar__searchInput___34nC3" data-reactid=".di0668qc5c.1.0.0.1.0.0.0.0.0"><div class="SearchBar__fa___29w7n" data-reactid=".di0668qc5c.1.0.0.1.0.0.0.0.1"><i class="fa fa-search" data-reactid=".di0668qc5c.1.0.0.1.0.0.0.0.1.0"></i></div></div></form></div></li></ul><ul class="right" data-reactid=".di0668qc5c.1.0.0.2"><li data-reactid=".di0668qc5c.1.0.0.2.0"><a class="" href="https://hub.docker.com/" data-reactid=".di0668qc5c.1.0.0.2.0.0">Dashboard</a></li><li data-reactid=".di0668qc5c.1.0.0.2.1"><a class="" href="https://hub.docker.com/explore/" data-reactid=".di0668qc5c.1.0.0.2.1.0">Explore</a></li><li data-reactid=".di0668qc5c.1.0.0.2.2"><a class="" href="https://hub.docker.com/organizations/" data-reactid=".di0668qc5c.1.0.0.2.2.0">Organizations</a></li><li class="has-dropdown" data-reactid=".di0668qc5c.1.0.0.2.3"><a data-reactid=".di0668qc5c.1.0.0.2.3.0">Create</a><ul class="dropdown" data-reactid=".di0668qc5c.1.0.0.2.3.1"><li data-reactid=".di0668qc5c.1.0.0.2.3.1.0"><a class="" href="https://hub.docker.com/add/repository/?namespace=jupyter" data-reactid=".di0668qc5c.1.0.0.2.3.1.0.0"><i class="fa fa-book" data-reactid=".di0668qc5c.1.0.0.2.3.1.0.0.0"></i><span data-reactid=".di0668qc5c.1.0.0.2.3.1.0.0.1"> Create Repository</span></a></li><li data-reactid=".di0668qc5c.1.0.0.2.3.1.1"><a class="" href="https://hub.docker.com/add/automated-build/jupyter/" data-reactid=".di0668qc5c.1.0.0.2.3.1.1.0"><i class="fa fa-cogs" data-reactid=".di0668qc5c.1.0.0.2.3.1.1.0.0"></i><span data-reactid=".di0668qc5c.1.0.0.2.3.1.1.0.1"> Create Automated Build</span></a></li><li data-reactid=".di0668qc5c.1.0.0.2.3.1.2"><a class="" href="https://hub.docker.com/organizations/add/" data-reactid=".di0668qc5c.1.0.0.2.3.1.2.0"><i class="fa fa-users" data-reactid=".di0668qc5c.1.0.0.2.3.1.2.0.0"></i><span data-reactid=".di0668qc5c.1.0.0.2.3.1.2.0.1"> Create Organization</span></a></li></ul></li><li class="has-dropdown" data-reactid=".di0668qc5c.1.0.0.2.4"><a data-reactid=".di0668qc5c.1.0.0.2.4.0"><span data-reactid=".di0668qc5c.1.0.0.2.4.0.0"><img class="Nav__avatar___1oHB-" src="./jupyter_jupyterhub - Docker Hub_files/saved_resource" data-reactid=".di0668qc5c.1.0.0.2.4.0.0.0"><span id="nw_username" class="Nav__username___25Hk7" data-reactid=".di0668qc5c.1.0.0.2.4.0.0.1">mcfaddja</span></span></a><ul class="dropdown" data-reactid=".di0668qc5c.1.0.0.2.4.1"><li data-reactid=".di0668qc5c.1.0.0.2.4.1.0"><a class="" href="https://hub.docker.com/u/mcfaddja/" data-reactid=".di0668qc5c.1.0.0.2.4.1.0.0">My Profile</a></li><li class="divider" data-reactid=".di0668qc5c.1.0.0.2.4.1.1"></li><li data-reactid=".di0668qc5c.1.0.0.2.4.1.2"><a href="https://docs.docker.com/docker-hub/" data-reactid=".di0668qc5c.1.0.0.2.4.1.2.0">Documentation</a></li><li data-reactid=".di0668qc5c.1.0.0.2.4.1.3"><a class="" href="https://hub.docker.com/help/" data-reactid=".di0668qc5c.1.0.0.2.4.1.3.0">Help</a></li><li class="divider" data-reactid=".di0668qc5c.1.0.0.2.4.1.4"></li><li data-reactid=".di0668qc5c.1.0.0.2.4.1.5"><a class="" href="https://hub.docker.com/account/settings/" data-reactid=".di0668qc5c.1.0.0.2.4.1.5.0">Settings</a></li><li data-reactid=".di0668qc5c.1.0.0.2.4.1.6"><a data-reactid=".di0668qc5c.1.0.0.2.4.1.6.0">Log out</a></li></ul></li></ul></section></nav></div><div class="full-width repository-page" data-reactid=".di0668qc5c.2"><div class="RepositoryPageWrapper__repoHeader___1-_FS" data-reactid=".di0668qc5c.2.0"><div class="row" data-reactid=".di0668qc5c.2.0.0"><div class="large-12 columns" data-reactid=".di0668qc5c.2.0.0.0"><div class="RepositoryPageWrapper__repoLabel___1668D" data-reactid=".di0668qc5c.2.0.0.0.0"><div data-reactid=".di0668qc5c.2.0.0.0.0.0"><span data-reactid=".di0668qc5c.2.0.0.0.0.0.0">Public</span><span data-reactid=".di0668qc5c.2.0.0.0.0.0.1"> | Automated Build</span></div></div><h2 class="RepositoryPageWrapper__repoTitle___3r12T" data-reactid=".di0668qc5c.2.0.0.0.1"><div data-reactid=".di0668qc5c.2.0.0.0.1.0"><a class="" href="https://hub.docker.com/u/jupyter/" data-reactid=".di0668qc5c.2.0.0.0.1.0.0">jupyter</a><span data-reactid=".di0668qc5c.2.0.0.0.1.0.1">/</span><a class="" href="https://hub.docker.com/r/jupyter/jupyterhub/" data-reactid=".di0668qc5c.2.0.0.0.1.0.2">jupyterhub</a><span class="RepositoryPageWrapper__repoStar___2rscF" data-reactid=".di0668qc5c.2.0.0.0.1.0.3"><i class="fa fa-star-o" data-reactid=".di0668qc5c.2.0.0.0.1.0.3.0"></i></span></div></h2><span class="RepositoryPageWrapper__repoSubtitle___34EVq" data-reactid=".di0668qc5c.2.0.0.0.2"><span data-reactid=".di0668qc5c.2.0.0.0.2.0">Last pushed: </span><span data-reactid=".di0668qc5c.2.0.0.0.2.1">2 years ago</span></span></div></div></div><div data-reactid=".di0668qc5c.2.1"><div class="secondary-contain-to-grid" data-reactid=".di0668qc5c.2.1.0"><nav class="secondary-top-bar" data-topbar="true" role="navigation" data-reactid=".di0668qc5c.2.1.0.0"><section class="secondary-top-bar-section" data-reactid=".di0668qc5c.2.1.0.0.0"><ul class="left" data-reactid=".di0668qc5c.2.1.0.0.0.0"><li class="active" data-reactid=".di0668qc5c.2.1.0.0.0.0.$repoDetailsInfo"><a class="" href="https://hub.docker.com/r/jupyter/jupyterhub/" data-reactid=".di0668qc5c.2.1.0.0.0.0.$repoDetailsInfo.0">Repo Info</a></li><li class="" data-reactid=".di0668qc5c.2.1.0.0.0.0.$repoDetailsTags"><a class="" href="https://hub.docker.com/r/jupyter/jupyterhub/tags/" data-reactid=".di0668qc5c.2.1.0.0.0.0.$repoDetailsTags.0">Tags</a></li><li class="" data-reactid=".di0668qc5c.2.1.0.0.0.0.2:$dockerfile"><a class="" href="https://hub.docker.com/r/jupyter/jupyterhub/~/dockerfile/" data-reactid=".di0668qc5c.2.1.0.0.0.0.2:$dockerfile.0">Dockerfile</a></li><li class="" data-reactid=".di0668qc5c.2.1.0.0.0.0.2:$buildsMain"><a class="" href="https://hub.docker.com/r/jupyter/jupyterhub/builds/" data-reactid=".di0668qc5c.2.1.0.0.0.0.2:$buildsMain.0">Build Details</a></li></ul></section></nav></div><div class="RepositoryDetailsWrapper__repoDetailsContent___1gg2B" data-reactid=".di0668qc5c.2.1.1"><div class="row" data-reactid=".di0668qc5c.2.1.1.0"><div class="large-12 columns" data-reactid=".di0668qc5c.2.1.1.0.0"><div data-reactid=".di0668qc5c.2.1.1.0.0.0"><div class="row" data-reactid=".di0668qc5c.2.1.1.0.0.0.0"><div class="large-8 columns" data-reactid=".di0668qc5c.2.1.1.0.0.0.0.0"><div class="Card__card___1LRg9" data-reactid=".di0668qc5c.2.1.1.0.0.0.0.0.0"><div class="Card__header___3uXHA Card__caps___3TLrF" data-reactid=".di0668qc5c.2.1.1.0.0.0.0.0.0.0"><span class="Card__heading___1mYyK Card__ellipseOverflow___axg3D" data-reactid=".di0668qc5c.2.1.1.0.0.0.0.0.0.0.0">Short Description</span></div><div class="Card__block___1G9Iy" data-reactid=".di0668qc5c.2.1.1.0.0.0.0.0.0.1"><div data-reactid=".di0668qc5c.2.1.1.0.0.0.0.0.0.1.0"><span data-reactid=".di0668qc5c.2.1.1.0.0.0.0.0.0.1.0.0"></span><span data-reactid=".di0668qc5c.2.1.1.0.0.0.0.0.0.1.0.1">JupyterHub images have moved to jupyterhub/jupyterhub as of 0.6 (April 2016)</span></div></div></div><div class="Card__card___1LRg9" data-reactid=".di0668qc5c.2.1.1.0.0.0.0.0.1"><div class="Card__header___3uXHA Card__caps___3TLrF" data-reactid=".di0668qc5c.2.1.1.0.0.0.0.0.1.0"><span class="Card__heading___1mYyK Card__ellipseOverflow___axg3D" data-reactid=".di0668qc5c.2.1.1.0.0.0.0.0.1.0.0">Full Description</span></div><div class="Card__block___1G9Iy" data-reactid=".di0668qc5c.2.1.1.0.0.0.0.0.1.1"><div data-reactid=".di0668qc5c.2.1.1.0.0.0.0.0.1.1.0"><span data-reactid=".di0668qc5c.2.1.1.0.0.0.0.0.1.1.0.0"></span><div class="Markdown__markdown___527C8" data-reactid=".di0668qc5c.2.1.1.0.0.0.0.0.1.1.0.1"><h1>JupyterHub: A multi-user server for Jupyter notebooks</h1>
<p>JupyterHub images have moved to <a href="https://hub.docker.com/r/jupyterhub/jupyterhub/">jupyterhub/jupyterhub</a> starting with 0.6 (April 2016)</p>
</div></div></div></div></div><div class="large-4 columns" data-reactid=".di0668qc5c.2.1.1.0.0.0.0.1"><div class="Card__card___1LRg9" data-reactid=".di0668qc5c.2.1.1.0.0.0.0.1.0"><div class="Card__header___3uXHA Card__caps___3TLrF" data-reactid=".di0668qc5c.2.1.1.0.0.0.0.1.0.0"><span class="Card__heading___1mYyK Card__ellipseOverflow___axg3D" data-reactid=".di0668qc5c.2.1.1.0.0.0.0.1.0.0.0">Docker Pull Command</span><span class="Card__action___1RhJi Card__caps___3TLrF" data-reactid=".di0668qc5c.2.1.1.0.0.0.0.1.0.0.1:$copy"><i class="fa fa-clipboard" data-reactid=".di0668qc5c.2.1.1.0.0.0.0.1.0.0.1:$copy.0"></i></span></div><div class="Card__block___1G9Iy" data-reactid=".di0668qc5c.2.1.1.0.0.0.0.1.0.1"><div class="PullCommand__pullCommand___3N0iQ" data-reactid=".di0668qc5c.2.1.1.0.0.0.0.1.0.1.0"><input class="PullCommand__pullCommand___3N0iQ" value="docker pull jupyter/jupyterhub" readonly="" data-reactid=".di0668qc5c.2.1.1.0.0.0.0.1.0.1.0.0"></div></div></div><div class="Card__card___1LRg9" data-reactid=".di0668qc5c.2.1.1.0.0.0.0.1.1"><div class="Card__header___3uXHA Card__caps___3TLrF" data-reactid=".di0668qc5c.2.1.1.0.0.0.0.1.1.0"><span class="Card__heading___1mYyK Card__ellipseOverflow___axg3D" data-reactid=".di0668qc5c.2.1.1.0.0.0.0.1.1.0.0">Owner</span></div><div class="Card__block___1G9Iy" data-reactid=".di0668qc5c.2.1.1.0.0.0.0.1.1.1"><div class="Owner__detail___3RhWe" data-reactid=".di0668qc5c.2.1.1.0.0.0.0.1.1.1.0"><img src="./jupyter_jupyterhub - Docker Hub_files/saved_resource(1)" class="Owner__avatar___13es5" data-reactid=".di0668qc5c.2.1.1.0.0.0.0.1.1.1.0.0"><div class="Owner__username___2PFej" data-reactid=".di0668qc5c.2.1.1.0.0.0.0.1.1.1.0.1">jupyter</div></div></div></div><div class="Card__card___1LRg9" data-reactid=".di0668qc5c.2.1.1.0.0.0.0.1.2"><div class="Card__header___3uXHA Card__caps___3TLrF" data-reactid=".di0668qc5c.2.1.1.0.0.0.0.1.2.0"><span class="Card__heading___1mYyK Card__ellipseOverflow___axg3D" data-reactid=".di0668qc5c.2.1.1.0.0.0.0.1.2.0.0">Source Repository</span></div><div class="Card__block___1G9Iy" data-reactid=".di0668qc5c.2.1.1.0.0.0.0.1.2.1"><span data-reactid=".di0668qc5c.2.1.1.0.0.0.0.1.2.1.0"><i class="fa fa-github" data-reactid=".di0668qc5c.2.1.1.0.0.0.0.1.2.1.0.0"></i><span data-reactid=".di0668qc5c.2.1.1.0.0.0.0.1.2.1.0.1">&nbsp;&nbsp;</span><a href="https://github.com/jupyter/jupyterhub" data-reactid=".di0668qc5c.2.1.1.0.0.0.0.1.2.1.0.2">jupyter/jupyterhub</a></span></div></div></div></div></div></div></div></div></div></div></main></div><script type="text/javascript" async="" src="./jupyter_jupyterhub - Docker Hub_files/analytics.js"></script><script async="" src="./jupyter_jupyterhub - Docker Hub_files/main.min.js"></script><script async="" src="./jupyter_jupyterhub - Docker Hub_files/gtm.js"></script><script>window.App={"context":{"dispatcher":{"stores":{"JWTStore":{"jwt":"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsIng1YyI6WyJNSUlDK1RDQ0FwK2dBd0lCQWdJQkFEQUtCZ2dxaGtqT1BRUURBakJHTVVRd1FnWURWUVFERXp0Uk5Gb3pPa2RYTjBrNldGUlFSRHBJVFRSUk9rOVVWRmc2TmtGRlF6cFNUVE5ET2tGU01rTTZUMFkzTnpwQ1ZrVkJPa2xHUlVrNlExazFTekFlRncweE56QTNNRFl3TURRek5UbGFGdzB4T0RBM01EWXdNRFF6TlRsYU1FWXhSREJDQmdOVkJBTVRPMEZLVnpVNlNVRTJXRHBUU2xWR09sbzNWMGM2Vms5Uk56cFdTMGxST2pKV1JrRTZUMGN5U3pwWlZrRXlPa1pPV0ZnNlNWSlJNam8yUmxWSU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBbm5JMVN5NDk4NnpaalFGTkdvU3NBRXAyVG5uMFRYY2RyeTVlN3ZSRlV6YlpQMEdQNXNRUUppdVprM0hKWGdNVU9uNzk4U0JJbmxUcXJhcUJLL2V2RkZYUjQrM1RVRk5ZdndkK0tjODZCK3hwSjBhVGdBTTM4N1VQa2MzT1lIVjU5NU5mVkdjUEJyNzZaYnMwS3NmY2JUQ2NHOGg2WUdWRFdTT2tWc3RRQWltbmxHcUYrTzJQT1Q1eEFDRDlrbW9CU1NESTJ0a042U3Z1eXBzM2RVcFVTbTFURmExK0MrdnRvYjNtQXBQZkxJZjJyUzBsR3p4OVgzejR2MmlhK2NUV0Q3akJsOHJySGk0VGZqVXl1SHhKNEFPZFJOdXBnamc0aThUb3NBRFRiR05oejlYTXlKVTVNdytmTGlsZkhQd1F4emJOT29KWFI3WFdCTmwxTXlMK1B3SURBUUFCbzRHeU1JR3ZNQTRHQTFVZER3RUIvd1FFQXdJSGdEQVBCZ05WSFNVRUNEQUdCZ1JWSFNVQU1FUUdBMVVkRGdROUJEdEJTbGMxT2tsQk5sZzZVMHBWUmpwYU4xZEhPbFpQVVRjNlZrdEpVVG95VmtaQk9rOUhNa3M2V1ZaQk1qcEdUbGhZT2tsU1VUSTZOa1pWU0RCR0JnTlZIU01FUHpBOWdEdFJORm96T2tkWE4wazZXRlJRUkRwSVRUUlJPazlVVkZnNk5rRkZRenBTVFRORE9rRlNNa002VDBZM056cENWa1ZCT2tsR1JVazZRMWsxU3pBS0JnZ3Foa2pPUFFRREFnTklBREJGQWlFQS9jT3RTSGlUV2VOcVhIZ3FyWlBFVldkL2V4UzhodWVrQVY0d2pBRDZQTWtDSUQrWXRvaDVNRWtmWTNwZk9zVEg3Y2w3ZGRCTm45alAzNEpnYTBpSGIzNjgiXX0.eyJlbWFpbCI6IiIsImV4cCI6MTUxMDk1Mzc2MywiaWF0IjoxNTA4MzYxNzY0LCJqdGkiOiI0MUVpWXlnMm0ycGRGQWN4Sm5nVnB3PT0iLCJzZXNzaW9uX2lkIjoiNDFFaVl5ZzJtMnBkRkFjeEpuZ1Zwdz09Iiwic3ViIjoiN2I4OWQzMTc3MmQ5NGFiMDk4NTBmYmI2N2MwM2UwMGIiLCJ1c2VyX2lkIjoiN2I4OWQzMTc3MmQ5NGFiMDk4NTBmYmI2N2MwM2UwMGIiLCJ1c2VybmFtZSI6Im1jZmFkZGphIn0.G2v3TNVFZt26kP4Cb6QjWDlMw17Ad4bttPfmVzDU9LhVjj8tXCe7233VhI1UHtMH_WAAWkPNFP_sqC1-B9DYi66FPCOT3m4zDKF9Ov-8B3Ral_qw39OkM69QLXGv-cBJfxVRXmQQgPN0oO-T4eViP7o_OM8aDeBNYsszpnoGqjWpM2CIQT3_2QPSmZDKlTn3I_Qw1hlox-Q4B6IxMFSoLAk1jvtnNuNhkmtreQwf5_yyOh6Bz8eFLbKtnI26joyH9e6WzNGwAEPitMY7ABpzyRIOz2LaJxc4cT4NnRqTBvV5QM43usQF82a7vN3ChZBjS9p6Q0L07XKLqwp0AdoHPQ","signatureIsExpired":false,"logoutCSRFToken":"NT4Nlpvl51tTuv03rXNh8ZAKHQvP7u4T9WQm7-6BSig="},"AccountInfoFormStore":{"fields":{"full_name":{},"company":{},"location":{},"profile_url":{},"gravatar_email":{}},"values":{"full_name":"","company":"","location":"","profile_url":"","gravatar_email":""},"STATUS":"DEFAULT"},"UserStore":{"company":"","dateJoined":"2016-07-19T23:19:05.608539Z","fullName":"","gravatarEmail":"","gravatarUrl":"https:\u002F\u002Fsecure.gravatar.com\u002Favatar\u002F9da563e0cbcf7d01cd7076907eadb5c2.jpg?s=80&r=g&d=mm","id":"7b89d31772d94ab09850fbb67c03e00b","isAdmin":false,"isStaff":false,"location":"","profileUrl":"","userType":"User","username":"mcfaddja","namespaces":[]},"ApplicationStore":{"route":{"routes":[{"name":"app","component":function StoreConnector(props, context) {
	        React.Component.apply(this, arguments);
	        this.state = this.getStateFromStores();
	        this._onStoreChange = null;
	        this._isMounted = false;
	    },"childRoutes":[{"name":"login","path":"\u002Flogin\u002F","component":function (props, context, updater) {
      // This constructor is overridden by mocks. The argument is used
      // by mocks to assert on what gets mounted.

      if (process.env.NODE_ENV !== 'production') {
        process.env.NODE_ENV !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : undefined;
      }

      // Wire up auto-binding
      if (this.__reactAutoBindMap) {
        bindAutoBindMethods(this);
      }

      this.props = props;
      this.context = context;
      this.refs = emptyObject;
      this.updater = updater || ReactNoopUpdateQueue;

      this.state = null;

      // ReactClasses doesn't have constructors. Instead, they use the
      // getInitialState and componentWillMount methods for initialization.

      var initialState = this.getInitialState ? this.getInitialState() : null;
      if (process.env.NODE_ENV !== 'production') {
        // We allow auto-mocks to proceed as if they're returning null.
        if (typeof initialState === 'undefined' && this.getInitialState._isMockFunction) {
          // This is probably bad practice. Consider warning here and
          // deprecating this convenience.
          initialState = null;
        }
      }
      !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : invariant(false) : undefined;

      this.state = initialState;
    }},{"name":"forgotPass","path":"\u002Freset-password\u002F","component":function (props, context, updater) {
      // This constructor is overridden by mocks. The argument is used
      // by mocks to assert on what gets mounted.

      if (process.env.NODE_ENV !== 'production') {
        process.env.NODE_ENV !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : undefined;
      }

      // Wire up auto-binding
      if (this.__reactAutoBindMap) {
        bindAutoBindMethods(this);
      }

      this.props = props;
      this.context = context;
      this.refs = emptyObject;
      this.updater = updater || ReactNoopUpdateQueue;

      this.state = null;

      // ReactClasses doesn't have constructors. Instead, they use the
      // getInitialState and componentWillMount methods for initialization.

      var initialState = this.getInitialState ? this.getInitialState() : null;
      if (process.env.NODE_ENV !== 'production') {
        // We allow auto-mocks to proceed as if they're returning null.
        if (typeof initialState === 'undefined' && this.getInitialState._isMockFunction) {
          // This is probably bad practice. Consider warning here and
          // deprecating this convenience.
          initialState = null;
        }
      }
      !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : invariant(false) : undefined;

      this.state = initialState;
    }},{"name":"resetPass","path":"\u002Faccount\u002Fpassword-reset-confirm\u002F:uidb64\u002F:reset_token\u002F","component":function StoreConnector(props, context) {
	        React.Component.apply(this, arguments);
	        this.state = this.getStateFromStores();
	        this._onStoreChange = null;
	        this._isMounted = false;
	    }},{"name":"passChangeSuccess","path":"\u002Faccount\u002Fpassword-reset-confirm\u002Fsuccess\u002F","component":function StoreConnector(props, context) {
	        React.Component.apply(this, arguments);
	        this.state = this.getStateFromStores();
	        this._onStoreChange = null;
	        this._isMounted = false;
	    }},{"name":"dashboard","path":"\u002F","component":function StoreConnector(props, context) {
	        React.Component.apply(this, arguments);
	        this.state = this.getStateFromStores();
	        this._onStoreChange = null;
	        this._isMounted = false;
	    },"indexRoute":{"name":"dashboardHome","component":function StoreConnector(props, context) {
	        React.Component.apply(this, arguments);
	        this.state = this.getStateFromStores();
	        this._onStoreChange = null;
	        this._isMounted = false;
	    }},"childRoutes":[{"name":"dashStars","path":"stars\u002F","component":function StoreConnector(props, context) {
	        React.Component.apply(this, arguments);
	        this.state = this.getStateFromStores();
	        this._onStoreChange = null;
	        this._isMounted = false;
	    }},{"name":"dashContribs","path":"contributed\u002F","component":function StoreConnector(props, context) {
	        React.Component.apply(this, arguments);
	        this.state = this.getStateFromStores();
	        this._onStoreChange = null;
	        this._isMounted = false;
	    }}]},{"name":"userWrapper","path":"\u002Fu\u002F:user\u002F","component":function StoreConnector(props, context) {
	        React.Component.apply(this, arguments);
	        this.state = this.getStateFromStores();
	        this._onStoreChange = null;
	        this._isMounted = false;
	    },"indexRoute":{"name":"user","component":function StoreConnector(props, context) {
	        React.Component.apply(this, arguments);
	        this.state = this.getStateFromStores();
	        this._onStoreChange = null;
	        this._isMounted = false;
	    }},"childRoutes":[{"name":"userStars","path":"starred\u002F","component":function StoreConnector(props, context) {
	        React.Component.apply(this, arguments);
	        this.state = this.getStateFromStores();
	        this._onStoreChange = null;
	        this._isMounted = false;
	    }}]},{"name":"orgDashboard","path":"\u002Fu\u002F:user\u002Fdashboard\u002F","component":function StoreConnector(props, context) {
	        React.Component.apply(this, arguments);
	        this.state = this.getStateFromStores();
	        this._onStoreChange = null;
	        this._isMounted = false;
	    },"indexRoute":{"name":"orgDashHome","component":function StoreConnector(props, context) {
	        React.Component.apply(this, arguments);
	        this.state = this.getStateFromStores();
	        this._onStoreChange = null;
	        this._isMounted = false;
	    }},"childRoutes":[{"name":"orgDashTeams","path":"teams\u002F","component":function StoreConnector(props, context) {
	        React.Component.apply(this, arguments);
	        this.state = this.getStateFromStores();
	        this._onStoreChange = null;
	        this._isMounted = false;
	    }},{"name":"orgDashBilling","path":"billing\u002F","component":function StoreConnector(props, context) {
	        React.Component.apply(this, arguments);
	        this.state = this.getStateFromStores();
	        this._onStoreChange = null;
	        this._isMounted = false;
	    }},{"name":"createOrgSubscription","path":"billing\u002Fcreate-subscription\u002F","component":function StoreConnector(props, context) {
	        React.Component.apply(this, arguments);
	        this.state = this.getStateFromStores();
	        this._onStoreChange = null;
	        this._isMounted = false;
	    }},{"name":"updateOrgBillingInfo","path":"billing\u002Fupdate-info\u002F","component":function StoreConnector(props, context) {
	        React.Component.apply(this, arguments);
	        this.state = this.getStateFromStores();
	        this._onStoreChange = null;
	        this._isMounted = false;
	    }},{"name":"orgDashSettings","path":"settings\u002F","component":function StoreConnector(props, context) {
	        React.Component.apply(this, arguments);
	        this.state = this.getStateFromStores();
	        this._onStoreChange = null;
	        this._isMounted = false;
	    }}]},{"name":"organizations","path":"organizations\u002F","component":function (props, context, updater) {
      // This constructor is overridden by mocks. The argument is used
      // by mocks to assert on what gets mounted.

      if (process.env.NODE_ENV !== 'production') {
        process.env.NODE_ENV !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : undefined;
      }

      // Wire up auto-binding
      if (this.__reactAutoBindMap) {
        bindAutoBindMethods(this);
      }

      this.props = props;
      this.context = context;
      this.refs = emptyObject;
      this.updater = updater || ReactNoopUpdateQueue;

      this.state = null;

      // ReactClasses doesn't have constructors. Instead, they use the
      // getInitialState and componentWillMount methods for initialization.

      var initialState = this.getInitialState ? this.getInitialState() : null;
      if (process.env.NODE_ENV !== 'production') {
        // We allow auto-mocks to proceed as if they're returning null.
        if (typeof initialState === 'undefined' && this.getInitialState._isMockFunction) {
          // This is probably bad practice. Consider warning here and
          // deprecating this convenience.
          initialState = null;
        }
      }
      !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : invariant(false) : undefined;

      this.state = initialState;
    },"indexRoute":{"name":"orgSummary","component":function OrganizationSummary() {
	    _classCallCheck(this, OrganizationSummary);

	    _get(Object.getPrototypeOf(OrganizationSummary.prototype), 'constructor', this).apply(this, arguments);
	  }},"childRoutes":[{"name":"addOrg","path":"add\u002F","component":function StoreConnector(props, context) {
	        React.Component.apply(this, arguments);
	        this.state = this.getStateFromStores();
	        this._onStoreChange = null;
	        this._isMounted = false;
	    }}]},{"name":"addRepo","path":"add\u002Frepository\u002F","component":function StoreConnector(props, context) {
	        React.Component.apply(this, arguments);
	        this.state = this.getStateFromStores();
	        this._onStoreChange = null;
	        this._isMounted = false;
	    }},{"name":"autobuildGithub","path":"add\u002Fautomated-build\u002Fgithub\u002Fform\u002F:sourceRepoNamespace\u002F:sourceRepoName\u002F","component":function StoreConnector(props, context) {
	        React.Component.apply(this, arguments);
	        this.state = this.getStateFromStores();
	        this._onStoreChange = null;
	        this._isMounted = false;
	    }},{"name":"autobuildBitbucket","path":"add\u002Fautomated-build\u002Fbitbucket\u002Fform\u002F:sourceRepoNamespace\u002F:sourceRepoName\u002F","component":function StoreConnector(props, context) {
	        React.Component.apply(this, arguments);
	        this.state = this.getStateFromStores();
	        this._onStoreChange = null;
	        this._isMounted = false;
	    }},{"path":"add\u002Fautomated-build\u002F:userNamespace\u002F","component":function StoreConnector(props, context) {
	        React.Component.apply(this, arguments);
	        this.state = this.getStateFromStores();
	        this._onStoreChange = null;
	        this._isMounted = false;
	    },"indexRoute":{"name":"addAutoBuild","component":function AutobuildIndex() {
	    _classCallCheck(this, AutobuildIndex);

	    _get(Object.getPrototypeOf(AutobuildIndex.prototype), 'constructor', this).apply(this, arguments);
	  }},"childRoutes":[{"name":"autobuildGithubOrgs","path":"github\u002Forgs\u002F","component":function StoreConnector(props, context) {
	        React.Component.apply(this, arguments);
	        this.state = this.getStateFromStores();
	        this._onStoreChange = null;
	        this._isMounted = false;
	    }},{"name":"autobuildBitbucketOrgs","path":"bitbucket\u002Forgs\u002F","component":function StoreConnector(props, context) {
	        React.Component.apply(this, arguments);
	        this.state = this.getStateFromStores();
	        this._onStoreChange = null;
	        this._isMounted = false;
	    }}]},{"name":"githubScopes","path":"account\u002Fauthorized-services\u002Fgithub-permissions\u002F","component":function StoreConnector(props, context) {
	        React.Component.apply(this, arguments);
	        this.state = this.getStateFromStores();
	        this._onStoreChange = null;
	        this._isMounted = false;
	    }},{"name":"repoOfficialWrapper","path":"\u002F_\u002F","component":function StoreConnector(props, context) {
	        React.Component.apply(this, arguments);
	        this.state = this.getStateFromStores();
	        this._onStoreChange = null;
	        this._isMounted = false;
	    },"childRoutes":[{"name":"repoOfficialDetails","component":function StoreConnector(props, context) {
	        React.Component.apply(this, arguments);
	        this.state = this.getStateFromStores();
	        this._onStoreChange = null;
	        this._isMounted = false;
	    },"childRoutes":[{"name":"repoOfficial","path":"*\u002F","component":function RepositoryDetailsInfo() {
	    _classCallCheck(this, RepositoryDetailsInfo);

	    _get(Object.getPrototypeOf(RepositoryDetailsInfo.prototype), 'constructor', this).apply(this, arguments);
	  }}]}]},{"name":"userWrapperRepos","path":"\u002Fr\u002F:user\u002F","component":function StoreConnector(props, context) {
	        React.Component.apply(this, arguments);
	        this.state = this.getStateFromStores();
	        this._onStoreChange = null;
	        this._isMounted = false;
	    },"indexRoute":{"name":"userRepos","component":function StoreConnector(props, context) {
	        React.Component.apply(this, arguments);
	        this.state = this.getStateFromStores();
	        this._onStoreChange = null;
	        this._isMounted = false;
	    }}},{"name":"repo","path":"\u002Fr\u002F:user\u002F*\u002F","component":function StoreConnector(props, context) {
	        React.Component.apply(this, arguments);
	        this.state = this.getStateFromStores();
	        this._onStoreChange = null;
	        this._isMounted = false;
	    },"childRoutes":[{"name":"repoSettings","path":"~\u002Fsettings\u002F","component":function (props, context, updater) {
      // This constructor is overridden by mocks. The argument is used
      // by mocks to assert on what gets mounted.

      if (process.env.NODE_ENV !== 'production') {
        process.env.NODE_ENV !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : undefined;
      }

      // Wire up auto-binding
      if (this.__reactAutoBindMap) {
        bindAutoBindMethods(this);
      }

      this.props = props;
      this.context = context;
      this.refs = emptyObject;
      this.updater = updater || ReactNoopUpdateQueue;

      this.state = null;

      // ReactClasses doesn't have constructors. Instead, they use the
      // getInitialState and componentWillMount methods for initialization.

      var initialState = this.getInitialState ? this.getInitialState() : null;
      if (process.env.NODE_ENV !== 'production') {
        // We allow auto-mocks to proceed as if they're returning null.
        if (typeof initialState === 'undefined' && this.getInitialState._isMockFunction) {
          // This is probably bad practice. Consider warning here and
          // deprecating this convenience.
          initialState = null;
        }
      }
      !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : invariant(false) : undefined;

      this.state = initialState;
    },"indexRoute":{"name":"repoSettingsMain","component":function repoSettingsMain() {
	    _classCallCheck(this, repoSettingsMain);

	    _get(Object.getPrototypeOf(repoSettingsMain.prototype), 'constructor', this).apply(this, arguments);
	  }},"childRoutes":[{"name":"collaborators","path":"collaborators\u002F","component":function StoreConnector(props, context) {
	        React.Component.apply(this, arguments);
	        this.state = this.getStateFromStores();
	        this._onStoreChange = null;
	        this._isMounted = false;
	    }},{"name":"webhooks","path":"webhooks\u002F","component":function StoreConnector(props, context) {
	        React.Component.apply(this, arguments);
	        this.state = this.getStateFromStores();
	        this._onStoreChange = null;
	        this._isMounted = false;
	    }},{"name":"autobuildSettings","path":"automated-builds\u002F","component":function StoreConnector(props, context) {
	        React.Component.apply(this, arguments);
	        this.state = this.getStateFromStores();
	        this._onStoreChange = null;
	        this._isMounted = false;
	    }}]},{"component":function StoreConnector(props, context) {
	        React.Component.apply(this, arguments);
	        this.state = this.getStateFromStores();
	        this._onStoreChange = null;
	        this._isMounted = false;
	    },"indexRoute":{"name":"repoDetailsInfo","component":function RepositoryDetailsInfo() {
	    _classCallCheck(this, RepositoryDetailsInfo);

	    _get(Object.getPrototypeOf(RepositoryDetailsInfo.prototype), 'constructor', this).apply(this, arguments);
	  }},"childRoutes":[{"name":"buildsMain","path":"builds\u002F","component":function StoreConnector(props, context) {
	        React.Component.apply(this, arguments);
	        this.state = this.getStateFromStores();
	        this._onStoreChange = null;
	        this._isMounted = false;
	    }},{"name":"buildLogs","path":"builds\u002F:build_code\u002F","component":function StoreConnector(props, context) {
	        React.Component.apply(this, arguments);
	        this.state = this.getStateFromStores();
	        this._onStoreChange = null;
	        this._isMounted = false;
	    }},{"name":"repoDetailsTags","path":"tags\u002F","component":function Connect(props, context) {
        _classCallCheck(this, Connect);

        var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));

        _this.version = version;
        _this.store = props.store || context.store;

        (0, _invariant2["default"])(_this.store, 'Could not find "store" in either the context or ' + ('props of "' + connectDisplayName + '". ') + 'Either wrap the root component in a <Provider>, ' + ('or explicitly pass "store" as a prop to "' + connectDisplayName + '".'));

        var storeState = _this.store.getState();
        _this.state = { storeState: storeState };
        _this.clearCache();
        return _this;
      }},{"name":"repoDetailsScannedTag","path":"tags\u002F:tagname\u002F","component":function Connect(props, context) {
        _classCallCheck(this, Connect);

        var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));

        _this.version = version;
        _this.store = props.store || context.store;

        (0, _invariant2["default"])(_this.store, 'Could not find "store" in either the context or ' + ('props of "' + connectDisplayName + '". ') + 'Either wrap the root component in a <Provider>, ' + ('or explicitly pass "store" as a prop to "' + connectDisplayName + '".'));

        var storeState = _this.store.getState();
        _this.state = { storeState: storeState };
        _this.clearCache();
        return _this;
      }},{"name":"dockerfile","path":"~\u002Fdockerfile\u002F","component":function StoreConnector(props, context) {
	        React.Component.apply(this, arguments);
	        this.state = this.getStateFromStores();
	        this._onStoreChange = null;
	        this._isMounted = false;
	    }}]}]},{"name":"account","path":"account\u002F","component":function (props, context, updater) {
      // This constructor is overridden by mocks. The argument is used
      // by mocks to assert on what gets mounted.

      if (process.env.NODE_ENV !== 'production') {
        process.env.NODE_ENV !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : undefined;
      }

      // Wire up auto-binding
      if (this.__reactAutoBindMap) {
        bindAutoBindMethods(this);
      }

      this.props = props;
      this.context = context;
      this.refs = emptyObject;
      this.updater = updater || ReactNoopUpdateQueue;

      this.state = null;

      // ReactClasses doesn't have constructors. Instead, they use the
      // getInitialState and componentWillMount methods for initialization.

      var initialState = this.getInitialState ? this.getInitialState() : null;
      if (process.env.NODE_ENV !== 'production') {
        // We allow auto-mocks to proceed as if they're returning null.
        if (typeof initialState === 'undefined' && this.getInitialState._isMockFunction) {
          // This is probably bad practice. Consider warning here and
          // deprecating this convenience.
          initialState = null;
        }
      }
      !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : invariant(false) : undefined;

      this.state = initialState;
    },"indexRoute":{"name":"settings","component":function StoreConnector(props, context) {
	        React.Component.apply(this, arguments);
	        this.state = this.getStateFromStores();
	        this._onStoreChange = null;
	        this._isMounted = false;
	    }},"childRoutes":[{"name":"accountSettings","path":"settings\u002F","component":function StoreConnector(props, context) {
	        React.Component.apply(this, arguments);
	        this.state = this.getStateFromStores();
	        this._onStoreChange = null;
	        this._isMounted = false;
	    }},{"name":"authorizedServices","path":"authorized-services\u002F","indexRoute":{"name":"authServicesRoot","component":function StoreConnector(props, context) {
	        React.Component.apply(this, arguments);
	        this.state = this.getStateFromStores();
	        this._onStoreChange = null;
	        this._isMounted = false;
	    }},"childRoutes":[{"name":"githubRedirect","path":"github\u002F","component":function StoreConnector(props, context) {
	        React.Component.apply(this, arguments);
	        this.state = this.getStateFromStores();
	        this._onStoreChange = null;
	        this._isMounted = false;
	    }},{"name":"bitbucketRedirect","path":"bitbucket\u002F","component":function StoreConnector(props, context) {
	        React.Component.apply(this, arguments);
	        this.state = this.getStateFromStores();
	        this._onStoreChange = null;
	        this._isMounted = false;
	    }}]},{"name":"billingPlans","path":"billing-plans\u002F","component":function StoreConnector(props, context) {
	        React.Component.apply(this, arguments);
	        this.state = this.getStateFromStores();
	        this._onStoreChange = null;
	        this._isMounted = false;
	    }},{"name":"updateBillingInfo","path":"billing-plans\u002Fupdate\u002F","component":function StoreConnector(props, context) {
	        React.Component.apply(this, arguments);
	        this.state = this.getStateFromStores();
	        this._onStoreChange = null;
	        this._isMounted = false;
	    }},{"name":"createSubscription","path":"billing-plans\u002Fcreate-subscription\u002F","component":function StoreConnector(props, context) {
	        React.Component.apply(this, arguments);
	        this.state = this.getStateFromStores();
	        this._onStoreChange = null;
	        this._isMounted = false;
	    }},{"name":"notifications","path":"notifications\u002F","component":function StoreConnector(props, context) {
	        React.Component.apply(this, arguments);
	        this.state = this.getStateFromStores();
	        this._onStoreChange = null;
	        this._isMounted = false;
	    }},{"name":"licenses","path":"licenses\u002F","component":function StoreConnector(props, context) {
	        React.Component.apply(this, arguments);
	        this.state = this.getStateFromStores();
	        this._onStoreChange = null;
	        this._isMounted = false;
	    }},{"name":"toOrg","path":"convert-to-org\u002F","component":function StoreConnector(props, context) {
	        React.Component.apply(this, arguments);
	        this.state = this.getStateFromStores();
	        this._onStoreChange = null;
	        this._isMounted = false;
	    }}]},{"name":"publicBillingPage","path":"billing-plans\u002F","component":function StoreConnector(props, context) {
	        React.Component.apply(this, arguments);
	        this.state = this.getStateFromStores();
	        this._onStoreChange = null;
	        this._isMounted = false;
	    }},{"name":"subscriptions","path":"\u002Fsubscriptions\u002F","component":function (props, context, updater) {
      // This constructor is overridden by mocks. The argument is used
      // by mocks to assert on what gets mounted.

      if (process.env.NODE_ENV !== 'production') {
        process.env.NODE_ENV !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : undefined;
      }

      // Wire up auto-binding
      if (this.__reactAutoBindMap) {
        bindAutoBindMethods(this);
      }

      this.props = props;
      this.context = context;
      this.refs = emptyObject;
      this.updater = updater || ReactNoopUpdateQueue;

      this.state = null;

      // ReactClasses doesn't have constructors. Instead, they use the
      // getInitialState and componentWillMount methods for initialization.

      var initialState = this.getInitialState ? this.getInitialState() : null;
      if (process.env.NODE_ENV !== 'production') {
        // We allow auto-mocks to proceed as if they're returning null.
        if (typeof initialState === 'undefined' && this.getInitialState._isMockFunction) {
          // This is probably bad practice. Consider warning here and
          // deprecating this convenience.
          initialState = null;
        }
      }
      !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : invariant(false) : undefined;

      this.state = initialState;
    }},{"name":"enterprise","path":"\u002Fenterprise\u002F","component":function (props, context, updater) {
      // This constructor is overridden by mocks. The argument is used
      // by mocks to assert on what gets mounted.

      if (process.env.NODE_ENV !== 'production') {
        process.env.NODE_ENV !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : undefined;
      }

      // Wire up auto-binding
      if (this.__reactAutoBindMap) {
        bindAutoBindMethods(this);
      }

      this.props = props;
      this.context = context;
      this.refs = emptyObject;
      this.updater = updater || ReactNoopUpdateQueue;

      this.state = null;

      // ReactClasses doesn't have constructors. Instead, they use the
      // getInitialState and componentWillMount methods for initialization.

      var initialState = this.getInitialState ? this.getInitialState() : null;
      if (process.env.NODE_ENV !== 'production') {
        // We allow auto-mocks to proceed as if they're returning null.
        if (typeof initialState === 'undefined' && this.getInitialState._isMockFunction) {
          // This is probably bad practice. Consider warning here and
          // deprecating this convenience.
          initialState = null;
        }
      }
      !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : invariant(false) : undefined;

      this.state = initialState;
    }},{"name":"serverTrial","path":"\u002Fenterprise\u002Ftrial\u002F","component":function EnterpriseTrial() {
	    _classCallCheck(this, EnterpriseTrial);

	    _get(Object.getPrototypeOf(EnterpriseTrial.prototype), 'constructor', this).apply(this, arguments);
	  }},{"name":"serverTrialTerms","path":"\u002Fenterprise\u002Ftrial\u002Fterms\u002F","component":function _default() {
	    _classCallCheck(this, _default);

	    _get(Object.getPrototypeOf(_default.prototype), 'constructor', this).apply(this, arguments);
	  }},{"name":"serverTrialSuccess","path":"\u002Fenterprise\u002Ftrial\u002Fsuccess\u002F","component":function StoreConnector(props, context) {
	        React.Component.apply(this, arguments);
	        this.state = this.getStateFromStores();
	        this._onStoreChange = null;
	        this._isMounted = false;
	    }},{"name":"eusa","path":"\u002Fenterprise\u002Feusa\u002F","component":function _default() {
	    _classCallCheck(this, _default);

	    _get(Object.getPrototypeOf(_default.prototype), 'constructor', this).apply(this, arguments);
	  }},{"name":"csEngineDownloadPage","path":"cs-engine\u002F","component":function CSEngineDownloadPage() {
	    _classCallCheck(this, CSEngineDownloadPage);

	    _get(Object.getPrototypeOf(CSEngineDownloadPage.prototype), 'constructor', this).apply(this, arguments);
	  }},{"name":"search","path":"search\u002F","component":function (props, context, updater) {
      // This constructor is overridden by mocks. The argument is used
      // by mocks to assert on what gets mounted.

      if (process.env.NODE_ENV !== 'production') {
        process.env.NODE_ENV !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : undefined;
      }

      // Wire up auto-binding
      if (this.__reactAutoBindMap) {
        bindAutoBindMethods(this);
      }

      this.props = props;
      this.context = context;
      this.refs = emptyObject;
      this.updater = updater || ReactNoopUpdateQueue;

      this.state = null;

      // ReactClasses doesn't have constructors. Instead, they use the
      // getInitialState and componentWillMount methods for initialization.

      var initialState = this.getInitialState ? this.getInitialState() : null;
      if (process.env.NODE_ENV !== 'production') {
        // We allow auto-mocks to proceed as if they're returning null.
        if (typeof initialState === 'undefined' && this.getInitialState._isMockFunction) {
          // This is probably bad practice. Consider warning here and
          // deprecating this convenience.
          initialState = null;
        }
      }
      !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : invariant(false) : undefined;

      this.state = initialState;
    }},{"name":"explore","path":"\u002Fexplore\u002F","component":function StoreConnector(props, context) {
	        React.Component.apply(this, arguments);
	        this.state = this.getStateFromStores();
	        this._onStoreChange = null;
	        this._isMounted = false;
	    }},{"name":"help","path":"\u002Fhelp\u002F","component":function (props, context, updater) {
      // This constructor is overridden by mocks. The argument is used
      // by mocks to assert on what gets mounted.

      if (process.env.NODE_ENV !== 'production') {
        process.env.NODE_ENV !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : undefined;
      }

      // Wire up auto-binding
      if (this.__reactAutoBindMap) {
        bindAutoBindMethods(this);
      }

      this.props = props;
      this.context = context;
      this.refs = emptyObject;
      this.updater = updater || ReactNoopUpdateQueue;

      this.state = null;

      // ReactClasses doesn't have constructors. Instead, they use the
      // getInitialState and componentWillMount methods for initialization.

      var initialState = this.getInitialState ? this.getInitialState() : null;
      if (process.env.NODE_ENV !== 'production') {
        // We allow auto-mocks to proceed as if they're returning null.
        if (typeof initialState === 'undefined' && this.getInitialState._isMockFunction) {
          // This is probably bad practice. Consider warning here and
          // deprecating this convenience.
          initialState = null;
        }
      }
      !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : invariant(false) : undefined;

      this.state = initialState;
    }},{"name":"register","path":"\u002Fregister\u002F","component":function Register() {
	    _classCallCheck(this, Register);

	    _get(Object.getPrototypeOf(Register.prototype), 'constructor', this).apply(this, arguments);
	  }},{"path":"*","component":function (props, context, updater) {
      // This constructor is overridden by mocks. The argument is used
      // by mocks to assert on what gets mounted.

      if (process.env.NODE_ENV !== 'production') {
        process.env.NODE_ENV !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : undefined;
      }

      // Wire up auto-binding
      if (this.__reactAutoBindMap) {
        bindAutoBindMethods(this);
      }

      this.props = props;
      this.context = context;
      this.refs = emptyObject;
      this.updater = updater || ReactNoopUpdateQueue;

      this.state = null;

      // ReactClasses doesn't have constructors. Instead, they use the
      // getInitialState and componentWillMount methods for initialization.

      var initialState = this.getInitialState ? this.getInitialState() : null;
      if (process.env.NODE_ENV !== 'production') {
        // We allow auto-mocks to proceed as if they're returning null.
        if (typeof initialState === 'undefined' && this.getInitialState._isMockFunction) {
          // This is probably bad practice. Consider warning here and
          // deprecating this convenience.
          initialState = null;
        }
      }
      !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : invariant(false) : undefined;

      this.state = initialState;
    }}]},{"name":"repo","path":"\u002Fr\u002F:user\u002F*\u002F","component":function StoreConnector(props, context) {
	        React.Component.apply(this, arguments);
	        this.state = this.getStateFromStores();
	        this._onStoreChange = null;
	        this._isMounted = false;
	    },"childRoutes":[{"name":"repoSettings","path":"~\u002Fsettings\u002F","component":function (props, context, updater) {
      // This constructor is overridden by mocks. The argument is used
      // by mocks to assert on what gets mounted.

      if (process.env.NODE_ENV !== 'production') {
        process.env.NODE_ENV !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : undefined;
      }

      // Wire up auto-binding
      if (this.__reactAutoBindMap) {
        bindAutoBindMethods(this);
      }

      this.props = props;
      this.context = context;
      this.refs = emptyObject;
      this.updater = updater || ReactNoopUpdateQueue;

      this.state = null;

      // ReactClasses doesn't have constructors. Instead, they use the
      // getInitialState and componentWillMount methods for initialization.

      var initialState = this.getInitialState ? this.getInitialState() : null;
      if (process.env.NODE_ENV !== 'production') {
        // We allow auto-mocks to proceed as if they're returning null.
        if (typeof initialState === 'undefined' && this.getInitialState._isMockFunction) {
          // This is probably bad practice. Consider warning here and
          // deprecating this convenience.
          initialState = null;
        }
      }
      !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : invariant(false) : undefined;

      this.state = initialState;
    },"indexRoute":{"name":"repoSettingsMain","component":function repoSettingsMain() {
	    _classCallCheck(this, repoSettingsMain);

	    _get(Object.getPrototypeOf(repoSettingsMain.prototype), 'constructor', this).apply(this, arguments);
	  }},"childRoutes":[{"name":"collaborators","path":"collaborators\u002F","component":function StoreConnector(props, context) {
	        React.Component.apply(this, arguments);
	        this.state = this.getStateFromStores();
	        this._onStoreChange = null;
	        this._isMounted = false;
	    }},{"name":"webhooks","path":"webhooks\u002F","component":function StoreConnector(props, context) {
	        React.Component.apply(this, arguments);
	        this.state = this.getStateFromStores();
	        this._onStoreChange = null;
	        this._isMounted = false;
	    }},{"name":"autobuildSettings","path":"automated-builds\u002F","component":function StoreConnector(props, context) {
	        React.Component.apply(this, arguments);
	        this.state = this.getStateFromStores();
	        this._onStoreChange = null;
	        this._isMounted = false;
	    }}]},{"component":function StoreConnector(props, context) {
	        React.Component.apply(this, arguments);
	        this.state = this.getStateFromStores();
	        this._onStoreChange = null;
	        this._isMounted = false;
	    },"indexRoute":{"name":"repoDetailsInfo","component":function RepositoryDetailsInfo() {
	    _classCallCheck(this, RepositoryDetailsInfo);

	    _get(Object.getPrototypeOf(RepositoryDetailsInfo.prototype), 'constructor', this).apply(this, arguments);
	  }},"childRoutes":[{"name":"buildsMain","path":"builds\u002F","component":function StoreConnector(props, context) {
	        React.Component.apply(this, arguments);
	        this.state = this.getStateFromStores();
	        this._onStoreChange = null;
	        this._isMounted = false;
	    }},{"name":"buildLogs","path":"builds\u002F:build_code\u002F","component":function StoreConnector(props, context) {
	        React.Component.apply(this, arguments);
	        this.state = this.getStateFromStores();
	        this._onStoreChange = null;
	        this._isMounted = false;
	    }},{"name":"repoDetailsTags","path":"tags\u002F","component":function Connect(props, context) {
        _classCallCheck(this, Connect);

        var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));

        _this.version = version;
        _this.store = props.store || context.store;

        (0, _invariant2["default"])(_this.store, 'Could not find "store" in either the context or ' + ('props of "' + connectDisplayName + '". ') + 'Either wrap the root component in a <Provider>, ' + ('or explicitly pass "store" as a prop to "' + connectDisplayName + '".'));

        var storeState = _this.store.getState();
        _this.state = { storeState: storeState };
        _this.clearCache();
        return _this;
      }},{"name":"repoDetailsScannedTag","path":"tags\u002F:tagname\u002F","component":function Connect(props, context) {
        _classCallCheck(this, Connect);

        var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));

        _this.version = version;
        _this.store = props.store || context.store;

        (0, _invariant2["default"])(_this.store, 'Could not find "store" in either the context or ' + ('props of "' + connectDisplayName + '". ') + 'Either wrap the root component in a <Provider>, ' + ('or explicitly pass "store" as a prop to "' + connectDisplayName + '".'));

        var storeState = _this.store.getState();
        _this.state = { storeState: storeState };
        _this.clearCache();
        return _this;
      }},{"name":"dockerfile","path":"~\u002Fdockerfile\u002F","component":function StoreConnector(props, context) {
	        React.Component.apply(this, arguments);
	        this.state = this.getStateFromStores();
	        this._onStoreChange = null;
	        this._isMounted = false;
	    }}]}]},{"component":function StoreConnector(props, context) {
	        React.Component.apply(this, arguments);
	        this.state = this.getStateFromStores();
	        this._onStoreChange = null;
	        this._isMounted = false;
	    },"indexRoute":{"name":"repoDetailsInfo","component":function RepositoryDetailsInfo() {
	    _classCallCheck(this, RepositoryDetailsInfo);

	    _get(Object.getPrototypeOf(RepositoryDetailsInfo.prototype), 'constructor', this).apply(this, arguments);
	  }},"childRoutes":[{"name":"buildsMain","path":"builds\u002F","component":function StoreConnector(props, context) {
	        React.Component.apply(this, arguments);
	        this.state = this.getStateFromStores();
	        this._onStoreChange = null;
	        this._isMounted = false;
	    }},{"name":"buildLogs","path":"builds\u002F:build_code\u002F","component":function StoreConnector(props, context) {
	        React.Component.apply(this, arguments);
	        this.state = this.getStateFromStores();
	        this._onStoreChange = null;
	        this._isMounted = false;
	    }},{"name":"repoDetailsTags","path":"tags\u002F","component":function Connect(props, context) {
        _classCallCheck(this, Connect);

        var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));

        _this.version = version;
        _this.store = props.store || context.store;

        (0, _invariant2["default"])(_this.store, 'Could not find "store" in either the context or ' + ('props of "' + connectDisplayName + '". ') + 'Either wrap the root component in a <Provider>, ' + ('or explicitly pass "store" as a prop to "' + connectDisplayName + '".'));

        var storeState = _this.store.getState();
        _this.state = { storeState: storeState };
        _this.clearCache();
        return _this;
      }},{"name":"repoDetailsScannedTag","path":"tags\u002F:tagname\u002F","component":function Connect(props, context) {
        _classCallCheck(this, Connect);

        var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));

        _this.version = version;
        _this.store = props.store || context.store;

        (0, _invariant2["default"])(_this.store, 'Could not find "store" in either the context or ' + ('props of "' + connectDisplayName + '". ') + 'Either wrap the root component in a <Provider>, ' + ('or explicitly pass "store" as a prop to "' + connectDisplayName + '".'));

        var storeState = _this.store.getState();
        _this.state = { storeState: storeState };
        _this.clearCache();
        return _this;
      }},{"name":"dockerfile","path":"~\u002Fdockerfile\u002F","component":function StoreConnector(props, context) {
	        React.Component.apply(this, arguments);
	        this.state = this.getStateFromStores();
	        this._onStoreChange = null;
	        this._isMounted = false;
	    }}]},{"name":"repoDetailsInfo","component":function RepositoryDetailsInfo() {
	    _classCallCheck(this, RepositoryDetailsInfo);

	    _get(Object.getPrototypeOf(RepositoryDetailsInfo.prototype), 'constructor', this).apply(this, arguments);
	  }}],"params":{"user":"jupyter","splat":"jupyterhub"},"location":{"pathname":"\u002Fr\u002Fjupyter\u002Fjupyterhub\u002F","search":"","hash":"","state":null,"action":"POP","key":"ngj234","query":{},"$searchBase":{"search":"","searchBase":""}},"components":[function StoreConnector(props, context) {
	        React.Component.apply(this, arguments);
	        this.state = this.getStateFromStores();
	        this._onStoreChange = null;
	        this._isMounted = false;
	    },function StoreConnector(props, context) {
	        React.Component.apply(this, arguments);
	        this.state = this.getStateFromStores();
	        this._onStoreChange = null;
	        this._isMounted = false;
	    },function StoreConnector(props, context) {
	        React.Component.apply(this, arguments);
	        this.state = this.getStateFromStores();
	        this._onStoreChange = null;
	        this._isMounted = false;
	    },function RepositoryDetailsInfo() {
	    _classCallCheck(this, RepositoryDetailsInfo);

	    _get(Object.getPrototypeOf(RepositoryDetailsInfo.prototype), 'constructor', this).apply(this, arguments);
	  }],"history":{"listenBefore":function listenBefore(hook) {
      return history.listenBefore(function (location, callback) {
        _runTransitionHook2['default'](hook, addQuery(location), callback);
      });
    },"listen":function listen(listener) {
      // TODO: Only use a single history listener. Otherwise we'll
      // end up with multiple concurrent calls to match.
      return history.listen(function (location) {
        if (state.location === location) {
          listener(null, state);
        } else {
          match(location, function (error, redirectLocation, nextState) {
            if (error) {
              listener(error);
            } else if (redirectLocation) {
              history.transitionTo(redirectLocation);
            } else if (nextState) {
              listener(null, nextState);
            } else {
              process.env.NODE_ENV !== 'production' ? _warning2['default'](false, 'Location "%s" did not match any routes', location.pathname + location.search + location.hash) : undefined;
            }
          });
        }
      });
    },"transitionTo":function transitionTo(nextLocation) {
    if (location && locationsAreEqual(location, nextLocation)) return; // Nothing to do.

    pendingLocation = nextLocation;

    confirmTransitionTo(nextLocation, function (ok) {
      if (pendingLocation !== nextLocation) return; // Transition was interrupted.

      if (ok) {
        // treat PUSH to current path like REPLACE to be consistent with browsers
        if (nextLocation.action === _Actions.PUSH) {
          var prevPath = createPath(location);
          var nextPath = createPath(nextLocation);

          if (nextPath === prevPath) nextLocation.action = _Actions.REPLACE;
        }

        if (finishTransition(nextLocation) !== false) updateLocation(nextLocation);
      } else if (location && nextLocation.action === _Actions.POP) {
        var prevIndex = allKeys.indexOf(location.key);
        var nextIndex = allKeys.indexOf(nextLocation.key);

        if (prevIndex !== -1 && nextIndex !== -1) go(prevIndex - nextIndex); // Restore the URL.
      }
    });
  },"push":function push(location) {
      history.push(appendQuery(location, location.query));
    },"replace":function replace(location) {
      history.replace(appendQuery(location, location.query));
    },"go":function go(n) {
    if (n) {
      if (!canGo(n)) {
        process.env.NODE_ENV !== 'production' ? _warning2['default'](false, 'Cannot go(%s) there is not enough history', n) : undefined;
        return;
      }

      current += n;

      var currentLocation = getCurrentLocation();

      // change action to POP
      history.transitionTo(_extends({}, currentLocation, { action: _Actions.POP }));
    }
  },"goBack":function goBack() {
    go(-1);
  },"goForward":function goForward() {
    go(1);
  },"createKey":function createKey() {
    return createRandomKey(keyLength);
  },"createPath":function createPath(location, query) {
      //warning(
      //  !query,
      //  'the query argument to createPath is deprecated; use a location descriptor instead'
      //)
      return history.createPath(appendQuery(location, query || location.query));
    },"createHref":function createHref(location, query) {
      //warning(
      //  !query,
      //  'the query argument to createHref is deprecated; use a location descriptor instead'
      //)
      return history.createHref(appendQuery(location, query || location.query));
    },"createLocation":function createLocation() {
      return addQuery(history.createLocation.apply(history, arguments));
    },"setState":function setState(state) {
    if (location) {
      updateLocationState(location, state);
      updateLocation(location);
    } else {
      updateLocationState(getCurrentLocation(), state);
    }
  },"registerTransitionHook":function registerTransitionHook(hook) {
    if (transitionHooks.indexOf(hook) === -1) transitionHooks.push(hook);
  },"unregisterTransitionHook":function unregisterTransitionHook(hook) {
    transitionHooks = transitionHooks.filter(function (item) {
      return item !== hook;
    });
  },"pushState":function pushState(state, path, query) {
      if (typeof path === 'string') path = _parsePath2['default'](path);

      push(_extends({ state: state }, path, { query: query }));
    },"replaceState":function replaceState(state, path, query) {
      if (typeof path === 'string') path = _parsePath2['default'](path);

      replace(_extends({ state: state }, path, { query: query }));
    },"isActive":function isActive(pathname, query) {
      var indexOnly = arguments.length <= 2 || arguments[2] === undefined ? false : arguments[2];

      return _isActive3['default'](pathname, query, indexOnly, state.location, state.routes, state.params);
    },"match":function match(location, callback) {
      if (partialNextState && partialNextState.location === location) {
        // Continue from where we left off.
        finishMatch(partialNextState, callback);
      } else {
        _matchRoutes2['default'](routes, location, function (error, nextState) {
          if (error) {
            callback(error);
          } else if (nextState) {
            finishMatch(_extends({}, nextState, { location: location }), callback);
          } else {
            callback();
          }
        });
      }
    },"listenBeforeLeavingRoute":function listenBeforeLeavingRoute(route, hook) {
      // TODO: Warn if they register for a route that isn't currently
      // active. They're probably doing something wrong, like re-creating
      // route objects on every location change.
      var routeID = getRouteID(route);
      var hooks = RouteHooks[routeID];

      if (hooks == null) {
        var thereWereNoRouteHooks = !hasAnyProperties(RouteHooks);

        hooks = RouteHooks[routeID] = [hook];

        if (thereWereNoRouteHooks) {
          // setup transition & beforeunload hooks
          unlistenBefore = history.listenBefore(transitionHook);

          if (history.listenBeforeUnload) unlistenBeforeUnload = history.listenBeforeUnload(beforeUnloadHook);
        }
      } else if (hooks.indexOf(hook) === -1) {
        hooks.push(hook);
      }

      return function () {
        var hooks = RouteHooks[routeID];

        if (hooks != null) {
          var newHooks = hooks.filter(function (item) {
            return item !== hook;
          });

          if (newHooks.length === 0) {
            delete RouteHooks[routeID];

            if (!hasAnyProperties(RouteHooks)) {
              // teardown transition & beforeunload hooks
              if (unlistenBefore) {
                unlistenBefore();
                unlistenBefore = null;
              }

              if (unlistenBeforeUnload) {
                unlistenBeforeUnload();
                unlistenBeforeUnload = null;
              }
            }
          } else {
            RouteHooks[routeID] = newHooks;
          }
        }
      };
    }},"ssoEnabled":true,"cookies":{"token":"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsIng1YyI6WyJNSUlDK1RDQ0FwK2dBd0lCQWdJQkFEQUtCZ2dxaGtqT1BRUURBakJHTVVRd1FnWURWUVFERXp0Uk5Gb3pPa2RYTjBrNldGUlFSRHBJVFRSUk9rOVVWRmc2TmtGRlF6cFNUVE5ET2tGU01rTTZUMFkzTnpwQ1ZrVkJPa2xHUlVrNlExazFTekFlRncweE56QTNNRFl3TURRek5UbGFGdzB4T0RBM01EWXdNRFF6TlRsYU1FWXhSREJDQmdOVkJBTVRPMEZLVnpVNlNVRTJXRHBUU2xWR09sbzNWMGM2Vms5Uk56cFdTMGxST2pKV1JrRTZUMGN5U3pwWlZrRXlPa1pPV0ZnNlNWSlJNam8yUmxWSU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBbm5JMVN5NDk4NnpaalFGTkdvU3NBRXAyVG5uMFRYY2RyeTVlN3ZSRlV6YlpQMEdQNXNRUUppdVprM0hKWGdNVU9uNzk4U0JJbmxUcXJhcUJLL2V2RkZYUjQrM1RVRk5ZdndkK0tjODZCK3hwSjBhVGdBTTM4N1VQa2MzT1lIVjU5NU5mVkdjUEJyNzZaYnMwS3NmY2JUQ2NHOGg2WUdWRFdTT2tWc3RRQWltbmxHcUYrTzJQT1Q1eEFDRDlrbW9CU1NESTJ0a042U3Z1eXBzM2RVcFVTbTFURmExK0MrdnRvYjNtQXBQZkxJZjJyUzBsR3p4OVgzejR2MmlhK2NUV0Q3akJsOHJySGk0VGZqVXl1SHhKNEFPZFJOdXBnamc0aThUb3NBRFRiR05oejlYTXlKVTVNdytmTGlsZkhQd1F4emJOT29KWFI3WFdCTmwxTXlMK1B3SURBUUFCbzRHeU1JR3ZNQTRHQTFVZER3RUIvd1FFQXdJSGdEQVBCZ05WSFNVRUNEQUdCZ1JWSFNVQU1FUUdBMVVkRGdROUJEdEJTbGMxT2tsQk5sZzZVMHBWUmpwYU4xZEhPbFpQVVRjNlZrdEpVVG95VmtaQk9rOUhNa3M2V1ZaQk1qcEdUbGhZT2tsU1VUSTZOa1pWU0RCR0JnTlZIU01FUHpBOWdEdFJORm96T2tkWE4wazZXRlJRUkRwSVRUUlJPazlVVkZnNk5rRkZRenBTVFRORE9rRlNNa002VDBZM056cENWa1ZCT2tsR1JVazZRMWsxU3pBS0JnZ3Foa2pPUFFRREFnTklBREJGQWlFQS9jT3RTSGlUV2VOcVhIZ3FyWlBFVldkL2V4UzhodWVrQVY0d2pBRDZQTWtDSUQrWXRvaDVNRWtmWTNwZk9zVEg3Y2w3ZGRCTm45alAzNEpnYTBpSGIzNjgiXX0.eyJlbWFpbCI6IiIsImV4cCI6MTUxMDk1Mzc2MywiaWF0IjoxNTA4MzYxNzY0LCJqdGkiOiI0MUVpWXlnMm0ycGRGQWN4Sm5nVnB3PT0iLCJzZXNzaW9uX2lkIjoiNDFFaVl5ZzJtMnBkRkFjeEpuZ1Zwdz09Iiwic3ViIjoiN2I4OWQzMTc3MmQ5NGFiMDk4NTBmYmI2N2MwM2UwMGIiLCJ1c2VyX2lkIjoiN2I4OWQzMTc3MmQ5NGFiMDk4NTBmYmI2N2MwM2UwMGIiLCJ1c2VybmFtZSI6Im1jZmFkZGphIn0.G2v3TNVFZt26kP4Cb6QjWDlMw17Ad4bttPfmVzDU9LhVjj8tXCe7233VhI1UHtMH_WAAWkPNFP_sqC1-B9DYi66FPCOT3m4zDKF9Ov-8B3Ral_qw39OkM69QLXGv-cBJfxVRXmQQgPN0oO-T4eViP7o_OM8aDeBNYsszpnoGqjWpM2CIQT3_2QPSmZDKlTn3I_Qw1hlox-Q4B6IxMFSoLAk1jvtnNuNhkmtreQwf5_yyOh6Bz8eFLbKtnI26joyH9e6WzNGwAEPitMY7ABpzyRIOz2LaJxc4cT4NnRqTBvV5QM43usQF82a7vN3ChZBjS9p6Q0L07XKLqwp0AdoHPQ","session_hint":"1","locsrftoken":"NT4Nlpvl51tTuv03rXNh8ZAKHQvP7u4T9WQm7-6BSig=","jwt":"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsIng1YyI6WyJNSUlDK1RDQ0FwK2dBd0lCQWdJQkFEQUtCZ2dxaGtqT1BRUURBakJHTVVRd1FnWURWUVFERXp0Uk5Gb3pPa2RYTjBrNldGUlFSRHBJVFRSUk9rOVVWRmc2TmtGRlF6cFNUVE5ET2tGU01rTTZUMFkzTnpwQ1ZrVkJPa2xHUlVrNlExazFTekFlRncweE56QTNNRFl3TURRek5UbGFGdzB4T0RBM01EWXdNRFF6TlRsYU1FWXhSREJDQmdOVkJBTVRPMEZLVnpVNlNVRTJXRHBUU2xWR09sbzNWMGM2Vms5Uk56cFdTMGxST2pKV1JrRTZUMGN5U3pwWlZrRXlPa1pPV0ZnNlNWSlJNam8yUmxWSU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBbm5JMVN5NDk4NnpaalFGTkdvU3NBRXAyVG5uMFRYY2RyeTVlN3ZSRlV6YlpQMEdQNXNRUUppdVprM0hKWGdNVU9uNzk4U0JJbmxUcXJhcUJLL2V2RkZYUjQrM1RVRk5ZdndkK0tjODZCK3hwSjBhVGdBTTM4N1VQa2MzT1lIVjU5NU5mVkdjUEJyNzZaYnMwS3NmY2JUQ2NHOGg2WUdWRFdTT2tWc3RRQWltbmxHcUYrTzJQT1Q1eEFDRDlrbW9CU1NESTJ0a042U3Z1eXBzM2RVcFVTbTFURmExK0MrdnRvYjNtQXBQZkxJZjJyUzBsR3p4OVgzejR2MmlhK2NUV0Q3akJsOHJySGk0VGZqVXl1SHhKNEFPZFJOdXBnamc0aThUb3NBRFRiR05oejlYTXlKVTVNdytmTGlsZkhQd1F4emJOT29KWFI3WFdCTmwxTXlMK1B3SURBUUFCbzRHeU1JR3ZNQTRHQTFVZER3RUIvd1FFQXdJSGdEQVBCZ05WSFNVRUNEQUdCZ1JWSFNVQU1FUUdBMVVkRGdROUJEdEJTbGMxT2tsQk5sZzZVMHBWUmpwYU4xZEhPbFpQVVRjNlZrdEpVVG95VmtaQk9rOUhNa3M2V1ZaQk1qcEdUbGhZT2tsU1VUSTZOa1pWU0RCR0JnTlZIU01FUHpBOWdEdFJORm96T2tkWE4wazZXRlJRUkRwSVRUUlJPazlVVkZnNk5rRkZRenBTVFRORE9rRlNNa002VDBZM056cENWa1ZCT2tsR1JVazZRMWsxU3pBS0JnZ3Foa2pPUFFRREFnTklBREJGQWlFQS9jT3RTSGlUV2VOcVhIZ3FyWlBFVldkL2V4UzhodWVrQVY0d2pBRDZQTWtDSUQrWXRvaDVNRWtmWTNwZk9zVEg3Y2w3ZGRCTm45alAzNEpnYTBpSGIzNjgiXX0.eyJlbWFpbCI6IiIsImV4cCI6MTUxMDk1Mzc2MywiaWF0IjoxNTA4MzYxNzY0LCJqdGkiOiI0MUVpWXlnMm0ycGRGQWN4Sm5nVnB3PT0iLCJzZXNzaW9uX2lkIjoiNDFFaVl5ZzJtMnBkRkFjeEpuZ1Zwdz09Iiwic3ViIjoiN2I4OWQzMTc3MmQ5NGFiMDk4NTBmYmI2N2MwM2UwMGIiLCJ1c2VyX2lkIjoiN2I4OWQzMTc3MmQ5NGFiMDk4NTBmYmI2N2MwM2UwMGIiLCJ1c2VybmFtZSI6Im1jZmFkZGphIn0.G2v3TNVFZt26kP4Cb6QjWDlMw17Ad4bttPfmVzDU9LhVjj8tXCe7233VhI1UHtMH_WAAWkPNFP_sqC1-B9DYi66FPCOT3m4zDKF9Ov-8B3Ral_qw39OkM69QLXGv-cBJfxVRXmQQgPN0oO-T4eViP7o_OM8aDeBNYsszpnoGqjWpM2CIQT3_2QPSmZDKlTn3I_Qw1hlox-Q4B6IxMFSoLAk1jvtnNuNhkmtreQwf5_yyOh6Bz8eFLbKtnI26joyH9e6WzNGwAEPitMY7ABpzyRIOz2LaJxc4cT4NnRqTBvV5QM43usQF82a7vN3ChZBjS9p6Q0L07XKLqwp0AdoHPQ"},"JWT":"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsIng1YyI6WyJNSUlDK1RDQ0FwK2dBd0lCQWdJQkFEQUtCZ2dxaGtqT1BRUURBakJHTVVRd1FnWURWUVFERXp0Uk5Gb3pPa2RYTjBrNldGUlFSRHBJVFRSUk9rOVVWRmc2TmtGRlF6cFNUVE5ET2tGU01rTTZUMFkzTnpwQ1ZrVkJPa2xHUlVrNlExazFTekFlRncweE56QTNNRFl3TURRek5UbGFGdzB4T0RBM01EWXdNRFF6TlRsYU1FWXhSREJDQmdOVkJBTVRPMEZLVnpVNlNVRTJXRHBUU2xWR09sbzNWMGM2Vms5Uk56cFdTMGxST2pKV1JrRTZUMGN5U3pwWlZrRXlPa1pPV0ZnNlNWSlJNam8yUmxWSU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBbm5JMVN5NDk4NnpaalFGTkdvU3NBRXAyVG5uMFRYY2RyeTVlN3ZSRlV6YlpQMEdQNXNRUUppdVprM0hKWGdNVU9uNzk4U0JJbmxUcXJhcUJLL2V2RkZYUjQrM1RVRk5ZdndkK0tjODZCK3hwSjBhVGdBTTM4N1VQa2MzT1lIVjU5NU5mVkdjUEJyNzZaYnMwS3NmY2JUQ2NHOGg2WUdWRFdTT2tWc3RRQWltbmxHcUYrTzJQT1Q1eEFDRDlrbW9CU1NESTJ0a042U3Z1eXBzM2RVcFVTbTFURmExK0MrdnRvYjNtQXBQZkxJZjJyUzBsR3p4OVgzejR2MmlhK2NUV0Q3akJsOHJySGk0VGZqVXl1SHhKNEFPZFJOdXBnamc0aThUb3NBRFRiR05oejlYTXlKVTVNdytmTGlsZkhQd1F4emJOT29KWFI3WFdCTmwxTXlMK1B3SURBUUFCbzRHeU1JR3ZNQTRHQTFVZER3RUIvd1FFQXdJSGdEQVBCZ05WSFNVRUNEQUdCZ1JWSFNVQU1FUUdBMVVkRGdROUJEdEJTbGMxT2tsQk5sZzZVMHBWUmpwYU4xZEhPbFpQVVRjNlZrdEpVVG95VmtaQk9rOUhNa3M2V1ZaQk1qcEdUbGhZT2tsU1VUSTZOa1pWU0RCR0JnTlZIU01FUHpBOWdEdFJORm96T2tkWE4wazZXRlJRUkRwSVRUUlJPazlVVkZnNk5rRkZRenBTVFRORE9rRlNNa002VDBZM056cENWa1ZCT2tsR1JVazZRMWsxU3pBS0JnZ3Foa2pPUFFRREFnTklBREJGQWlFQS9jT3RTSGlUV2VOcVhIZ3FyWlBFVldkL2V4UzhodWVrQVY0d2pBRDZQTWtDSUQrWXRvaDVNRWtmWTNwZk9zVEg3Y2w3ZGRCTm45alAzNEpnYTBpSGIzNjgiXX0.eyJlbWFpbCI6IiIsImV4cCI6MTUxMDk1Mzc2MywiaWF0IjoxNTA4MzYxNzY0LCJqdGkiOiI0MUVpWXlnMm0ycGRGQWN4Sm5nVnB3PT0iLCJzZXNzaW9uX2lkIjoiNDFFaVl5ZzJtMnBkRkFjeEpuZ1Zwdz09Iiwic3ViIjoiN2I4OWQzMTc3MmQ5NGFiMDk4NTBmYmI2N2MwM2UwMGIiLCJ1c2VyX2lkIjoiN2I4OWQzMTc3MmQ5NGFiMDk4NTBmYmI2N2MwM2UwMGIiLCJ1c2VybmFtZSI6Im1jZmFkZGphIn0.G2v3TNVFZt26kP4Cb6QjWDlMw17Ad4bttPfmVzDU9LhVjj8tXCe7233VhI1UHtMH_WAAWkPNFP_sqC1-B9DYi66FPCOT3m4zDKF9Ov-8B3Ral_qw39OkM69QLXGv-cBJfxVRXmQQgPN0oO-T4eViP7o_OM8aDeBNYsszpnoGqjWpM2CIQT3_2QPSmZDKlTn3I_Qw1hlox-Q4B6IxMFSoLAk1jvtnNuNhkmtreQwf5_yyOh6Bz8eFLbKtnI26joyH9e6WzNGwAEPitMY7ABpzyRIOz2LaJxc4cT4NnRqTBvV5QM43usQF82a7vN3ChZBjS9p6Q0L07XKLqwp0AdoHPQ"}},"EmailsStore":{"STATUS":"DEFAULT","emails":[],"addEmail":"","addError":"","emailConfirmations":{},"_cleanSlate":{"emails":[]}},"DeleteRepoFormStore":{"error":"","STATUS":"DEFAULT","values":{"confirmRepoName":""}},"RepoDetailsLongDescriptionFormStore":{"_defaultValues":{"longDescription":"# JupyterHub: A multi-user server for Jupyter notebooks\n\nJupyterHub images have moved to [jupyterhub\u002Fjupyterhub](https:\u002F\u002Fhub.docker.com\u002Fr\u002Fjupyterhub\u002Fjupyterhub\u002F) starting with 0.6 (April 2016)"},"fields":{"longDescription":{}},"values":{"longDescription":"# JupyterHub: A multi-user server for Jupyter notebooks\n\nJupyterHub images have moved to [jupyterhub\u002Fjupyterhub](https:\u002F\u002Fhub.docker.com\u002Fr\u002Fjupyterhub\u002Fjupyterhub\u002F) starting with 0.6 (April 2016)"},"isEditing":false,"successfulSave":false},"RepoDetailsShortDescriptionFormStore":{"_defaultValues":{"shortDescription":"JupyterHub images have moved to jupyterhub\u002Fjupyterhub as of 0.6 (April 2016)"},"fields":{"shortDescription":{}},"values":{"shortDescription":"JupyterHub images have moved to jupyterhub\u002Fjupyterhub as of 0.6 (April 2016)"},"isEditing":false,"successfulSave":false},"RepoDetailsVisibilityFormStore":{"badRequest":"","error":"","success":"","isPrivate":false,"privateRepoLimit":null,"numPrivateReposAvailable":null,"values":{"confirmRepoName":""},"STATUS":"DEFAULT"},"RepositoryPageStore":{"canEdit":false,"description":"JupyterHub images have moved to jupyterhub\u002Fjupyterhub as of 0.6 (April 2016)","fullDescription":"# JupyterHub: A multi-user server for Jupyter notebooks\n\nJupyterHub images have moved to [jupyterhub\u002Fjupyterhub](https:\u002F\u002Fhub.docker.com\u002Fr\u002Fjupyterhub\u002Fjupyterhub\u002F) starting with 0.6 (April 2016)","hasStarred":false,"isPrivate":false,"isAutomated":true,"lastUpdated":"2016-04-18T11:45:51.361768Z","name":"jupyterhub","namespace":"jupyter","status":1,"globalFormError":"","STATUS":"DEFAULT"},"OrganizationStore":{"name":"","gravatarURL":"https:\u002F\u002Fsecure.gravatar.com\u002Favatar\u002F00000000000000000000000000000000?d=retro&f=y","currentOrg":{},"currentOrgTeams":[],"orgs":[],"error":"","success":""},"AutoBuildSettingsStore":{"autoBuildStore":{"repository":54623,"build_name":"jupyter\u002Fjupyterhub","provider":"github","source_url":"https:\u002F\u002Fgithub.com\u002Fjupyter\u002Fjupyterhub.git","docker_url":"jupyter\u002Fjupyterhub","repo_web_url":"https:\u002F\u002Fgithub.com\u002Fjupyter\u002Fjupyterhub","repo_type":"git","active":false,"repo_id":"20785986","build_tags":[{"id":30371,"name":"latest","dockerfile_location":"\u002F","source_name":"master","source_type":"Branch"},{"id":207915,"name":"{sourceref}","dockerfile_location":"\u002F","source_name":"\u002F.*\u002F","source_type":"Branch"},{"id":207916,"name":"{sourceref}","dockerfile_location":"\u002F","source_name":"0.2.0","source_type":"Tag"},{"id":207917,"name":"{sourceref}","dockerfile_location":"\u002F","source_name":"0.3.0","source_type":"Tag"},{"id":211600,"name":"{sourceref}","dockerfile_location":"\u002F","source_name":"\u002F.*\u002F","source_type":"Tag"}],"deploykey":null,"hook_id":3006400,"webhook_id":"3006400"},"autoBuildBlankSlate":{"repository":54623,"build_name":"jupyter\u002Fjupyterhub","provider":"github","source_url":"https:\u002F\u002Fgithub.com\u002Fjupyter\u002Fjupyterhub.git","docker_url":"jupyter\u002Fjupyterhub","repo_web_url":"https:\u002F\u002Fgithub.com\u002Fjupyter\u002Fjupyterhub","repo_type":"git","active":false,"repo_id":"20785986","build_tags":[{"id":30371,"name":"latest","dockerfile_location":"\u002F","source_name":"master","source_type":"Branch"},{"id":207915,"name":"{sourceref}","dockerfile_location":"\u002F","source_name":"\u002F.*\u002F","source_type":"Branch"},{"id":207916,"name":"{sourceref}","dockerfile_location":"\u002F","source_name":"0.2.0","source_type":"Tag"},{"id":207917,"name":"{sourceref}","dockerfile_location":"\u002F","source_name":"0.3.0","source_type":"Tag"},{"id":211600,"name":"{sourceref}","dockerfile_location":"\u002F","source_name":"\u002F.*\u002F","source_type":"Tag"}],"deploykey":null,"hook_id":3006400,"webhook_id":"3006400"},"autoBuildLinks":[],"triggerStatus":{"token":"","trigger_url":"","active":false},"triggerLinkForm":{"repoName":""},"triggerLogs":[],"validations":{"buildTags":{"hasError":false,"success":false,"errors":[]},"links":{"hasError":false,"success":false,"error":""},"trigger":{"success":"","error":""}},"newTags":[],"STATUS":"DEFAULT"}}},"plugins":{}},"plugins":{}}; window.ReduxApp = {"ui":{"__reducers":{}},"repos":{},"scans":{},"status":{},"tags":{}};</script><script src="./jupyter_jupyterhub - Docker Hub_files/bugsnag-2.min.js" data-apikey="d639ea00dd6e493b739de27a7ee0f90c"></script><script src="./jupyter_jupyterhub - Docker Hub_files/recurly.js"></script><script src="./jupyter_jupyterhub - Docker Hub_files/client.6764bc230a228e4c9549.js" defer=""></script><script>(
        function(w,d,s,l,i){
          w[l]=w[l]||[];
          w[l].push({'gtm.start': new Date().getTime(),event:'gtm.js'});
          var f=d.getElementsByTagName(s)[0],
              j=d.createElement(s),
              dl=l!='dataLayer'?'&l='+l:'';
          j.async=true;
          j.src='//www.googletagmanager.com/gtm.js?id='+i+dl;
          f.parentNode.insertBefore(j,f);
        }
      )(window,document,'script','dataLayer','GTM-KB4JTX');</script><script type="text/javascript">(
      function(){
        window._pxAppId ='PXPmP8ILuI';
        window._pxPubHost = 'collector.a';
        var p = document.getElementsByTagName('script')[0],
        s = document.createElement('script');
        s.async = 1;
        s.src = '//client.a.pxi.pub/PXPmP8ILuI/main.min.js';
        p.parentNode.insertBefore(s,p);
      }());</script><noscript>&lt;div style="position:fixed;top:0px;left:0px;width:1px;height:1px;"&gt;&lt;img src="//collector.a.pxi.pub/api/v1/collector/noScript.gif?appId=PXPmP8ILuI"/&gt;&lt;/div&gt;</noscript></body></html>